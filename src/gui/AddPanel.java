/*Panel for adding book.
Ross van der Heyde
26 February 2017. Got 63% for EEE2026S, Justin must've given me some free marks.
 */
package gui;

import library.*;
import util.PopUpMessages;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * A <code>JPanel</code> that provides the interface and functionality for
 * adding books to the database. This panel is added to the tabbed pane on the
 * main GUI
 *
 * @author Ross
 */
public class AddPanel extends javax.swing.JPanel {
    private static Logger logger = Logger.getLogger(AddPanel.class.getName());
    private static final Driver DRIVER = new Driver();
    private List<Author> multipleAuthors = null;

    private javax.swing.JPanel addFictionPanel;
    private javax.swing.JButton addGenre;
    private javax.swing.JPanel addNonPanel;
    private javax.swing.JButton addType;
    private javax.swing.JButton butAdd;
    private javax.swing.JButton butAddAuthors;
    private javax.swing.JButton butAddNewAuthors;
    private javax.swing.JButton butAddSeries;
    private javax.swing.JButton butAddShop;
    private javax.swing.JButton butClear;
    private javax.swing.JButton butClearMess;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> comboAuthor;
    private javax.swing.JComboBox<String> comboDew1;
    private javax.swing.JComboBox<String> comboDew2;
    private javax.swing.JComboBox<String> comboDew3;
    private javax.swing.JComboBox<String> comboGenre;
    private javax.swing.JComboBox<String> comboSeries;
    private javax.swing.JComboBox<String> comboShop;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lAuthor;
    private javax.swing.JLabel lDate;
    private javax.swing.JLabel lFiction;
    private javax.swing.JLabel lGeneral;
    private javax.swing.JLabel lGenre;
    private javax.swing.JLabel lNonFiction;
    private javax.swing.JLabel lNumSeries;
    private javax.swing.JLabel lPlace;
    private javax.swing.JLabel lPrice;
    private javax.swing.JLabel lPublished;
    private javax.swing.JLabel lSeries;
    private javax.swing.JLabel lSpec;
    private javax.swing.JLabel lThree;
    private javax.swing.JLabel lTitle;
    private javax.swing.JLabel lType;
    private javax.swing.JPanel pMessage;
    private javax.swing.JRadioButton radAddDum;
    private javax.swing.JRadioButton radFiction;
    private javax.swing.JRadioButton radNonFic;
    private javax.swing.JTextPane taMessages;
    private javax.swing.JTextField tfDate;
    private javax.swing.JTextField tfNumber;
    private javax.swing.JTextField tfPrice;
    private javax.swing.JTextField tfYearPublished;
    private javax.swing.JTextField tfTitle;

    /**
     * Creates new form NewJPanel.
     */
    public AddPanel() {
        initComponents();

        radAddDum.setVisible(false);

        comboShop.setModel(DRIVER.getComboBoxModel(ComboBoxType.SHOP));
        comboGenre.setModel(DRIVER.getComboBoxModel(ComboBoxType.GENRE));
        comboType.setModel(DRIVER.getComboBoxModel(ComboBoxType.TYPE));

        //deweyOne and roles not necessary
        comboSeries.setModel(DRIVER.getComboBoxModel(ComboBoxType.SERIES));
        AutoCompletion.enable(comboSeries); //enable autocompletion
        comboSeries.setSelectedIndex(-1);

        comboAuthor.setModel(DRIVER.getComboBoxModel(ComboBoxType.AUTHOR));
        AutoCompletion.enable(comboAuthor);
        comboAuthor.setSelectedIndex(-1);

        comboDew1ItemStateChanged(null);
        comboDew2ItemStateChanged(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        radFiction = new javax.swing.JRadioButton();
        radNonFic = new javax.swing.JRadioButton();
        radAddDum = new javax.swing.JRadioButton();
        lTitle = new javax.swing.JLabel();
        lAuthor = new javax.swing.JLabel();
        lPrice = new javax.swing.JLabel();
        lPlace = new javax.swing.JLabel();
        lPublished = new javax.swing.JLabel();
        lDate = new javax.swing.JLabel();
        tfTitle = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        tfDate = new javax.swing.JTextField();
        tfYearPublished = new javax.swing.JTextField();
        butAddAuthors = new javax.swing.JButton();
        comboShop = new javax.swing.JComboBox();
        butAddShop = new javax.swing.JButton();
        addFictionPanel = new javax.swing.JPanel();
        lFiction = new javax.swing.JLabel();
        lGenre = new javax.swing.JLabel();
        lType = new javax.swing.JLabel();
        lSeries = new javax.swing.JLabel();
        lNumSeries = new javax.swing.JLabel();
        tfNumber = new javax.swing.JTextField();
        comboGenre = new javax.swing.JComboBox();
        comboType = new javax.swing.JComboBox();
        addGenre = new javax.swing.JButton();
        addType = new javax.swing.JButton();
        butAddSeries = new javax.swing.JButton();
        comboSeries = new javax.swing.JComboBox<>();
        addNonPanel = new javax.swing.JPanel();
        lGeneral = new javax.swing.JLabel();
        lSpec = new javax.swing.JLabel();
        lNonFiction = new javax.swing.JLabel();
        comboDew1 = new javax.swing.JComboBox<>();
        comboDew2 = new javax.swing.JComboBox();
        lThree = new javax.swing.JLabel();
        comboDew3 = new javax.swing.JComboBox();
        butClear = new javax.swing.JButton();
        butAdd = new javax.swing.JButton();
        pMessage = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taMessages = new javax.swing.JTextPane();
        butClearMess = new javax.swing.JButton();
        butAddNewAuthors = new javax.swing.JButton();
        comboAuthor = new javax.swing.JComboBox<>();

        buttonGroup.add(radFiction);
        radFiction.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        radFiction.setText("Fiction");
        radFiction.setToolTipText("Select whether you are adding a fiction or non-fiction book.");

        buttonGroup.add(radNonFic);
        radNonFic.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        radNonFic.setText("Non-fiction");
        radNonFic.setToolTipText("Select whether you are adding a fiction or non-fiction book.");

        buttonGroup.add(radAddDum);
        radAddDum.setText("dumb");

        lTitle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lTitle.setText("Title:");

        lAuthor.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lAuthor.setText("Author:");

        lPrice.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lPrice.setText("Price:");

        lPlace.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lPlace.setText("Place Bought:");

        lPublished.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lPublished.setText("First published:");

        lDate.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lDate.setText("Date Bought:");

        tfTitle.setToolTipText("The title of the book.");

        tfPrice.setToolTipText("Amount paid for the book.");

        tfDate.setToolTipText("Month and year book was bought (MM/YYYY).");

        tfYearPublished.setToolTipText("The year the book was first published.");

        butAddAuthors.setText("Add multiple");
        butAddAuthors.setToolTipText("Add an editor, illustrator, or more than one author.");
        butAddAuthors.addActionListener(evt -> butAddAuthorsActionPerformed(evt));
        butAddAuthors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butAddAuthorsKeyReleased(evt);
            }
        });

        comboShop.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        comboShop.setToolTipText("Select the shop where the book was bought.");

        butAddShop.setText("Add shop");
        butAddShop.setToolTipText("Add a new shop to the database.");
        butAddShop.addActionListener(evt -> butAddShopActionPerformed(evt));
        butAddShop.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butAddShopKeyReleased(evt);
            }
        });

        addFictionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lFiction.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lFiction.setText("<html><b><u>Fiction only</u></b>");

        lGenre.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lGenre.setText("Genre:");

        lType.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lType.setText("Type of book:");

        lSeries.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lSeries.setText("Series:");

        lNumSeries.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lNumSeries.setText("Number in series:");

        tfNumber.setToolTipText("Number the book is in the series. Enter 0 if not part of a series.");

        comboGenre.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        comboGenre.setToolTipText("The book's genre.");

        comboType.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        comboType.setToolTipText("The type of book (novel, play, poems, etc).");

        addGenre.setText("Add new genre");
        addGenre.setToolTipText("Add a new genre to the database.");
        addGenre.addActionListener(evt -> addGenreActionPerformed(evt));
        addGenre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addGenreKeyReleased(evt);
            }
        });

        addType.setText("Add new type");
        addType.setToolTipText("Add a new type of book.");
        addType.addActionListener(evt -> addTypeActionPerformed(evt));
        addType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addTypeKeyReleased(evt);
            }
        });

        butAddSeries.setText("Add new series");
        butAddSeries.addActionListener(evt -> butAddSeriesActionPerformed(evt));
        butAddSeries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butAddSeriesKeyReleased(evt);
            }
        });

        comboSeries.setEditable(true);
        comboSeries.setToolTipText("<html>Select the series that the book is part of<br>\nIf the series is not in the list, add it using the 'add<br>\nnew series' button.");

        javax.swing.GroupLayout addFictionPanelLayout = new javax.swing.GroupLayout(addFictionPanel);
        addFictionPanel.setLayout(addFictionPanelLayout);
        addFictionPanelLayout.setHorizontalGroup(
                addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addFictionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lGenre)
                                        .addComponent(lType)
                                        .addComponent(lSeries)
                                        .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lNumSeries)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(comboType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(comboGenre, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comboSeries, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(addGenre)
                                                .addComponent(addType, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(butAddSeries))
                                .addGap(118, 118, 118))
        );
        addFictionPanelLayout.setVerticalGroup(
                addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addFictionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lGenre)
                                        .addComponent(comboGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addGenre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lType)
                                        .addComponent(comboType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addType))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lSeries)
                                        .addComponent(butAddSeries)
                                        .addComponent(comboSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addFictionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lNumSeries)
                                        .addComponent(tfNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(16, Short.MAX_VALUE))
        );

        addNonPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lGeneral.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lGeneral.setText("Dewey level 1:");

        lSpec.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lSpec.setText("Level 2:");

        lNonFiction.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lNonFiction.setText("<html><b><u>Non-fiction only</u></b>");
        lNonFiction.setToolTipText("Fill in these fields only if you are adding a non-fiction book.");

        comboDew1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Generalities, Computer Science & Information", "Philosophy & psychology", "Religion", "Social sciences", "Language", "Natural sciences & mathematics", "Technology (Applied sciences)", "The arts", "Literature & rhetoric", "Geography & history"}));
        comboDew1.setToolTipText("General topic that the book covers.");
        comboDew1.addItemListener(evt -> comboDew1ItemStateChanged(evt));

        comboDew2.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));
        comboDew2.setToolTipText("More specific topic.");
        comboDew2.addItemListener(evt -> comboDew2ItemStateChanged(evt));

        lThree.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lThree.setText("Level 3:");

        comboDew3.setModel(new javax.swing.DefaultComboBoxModel(new String[]{"Item 1", "Item 2", "Item 3", "Item 4"}));

        javax.swing.GroupLayout addNonPanelLayout = new javax.swing.GroupLayout(addNonPanel);
        addNonPanel.setLayout(addNonPanelLayout);
        addNonPanelLayout.setHorizontalGroup(
                addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(addNonPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(addNonPanelLayout.createSequentialGroup()
                                                .addComponent(lGeneral)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(comboDew1, 0, 1, Short.MAX_VALUE)
                                                .addGap(2, 2, 2))
                                        .addComponent(lNonFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(addNonPanelLayout.createSequentialGroup()
                                                .addGroup(addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(addNonPanelLayout.createSequentialGroup()
                                                                .addGap(41, 41, 41)
                                                                .addComponent(lThree))
                                                        .addComponent(lSpec, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(comboDew2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(comboDew3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(357, 357, 357))
        );
        addNonPanelLayout.setVerticalGroup(
                addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addNonPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lNonFiction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lGeneral)
                                        .addComponent(comboDew1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lSpec)
                                        .addComponent(comboDew2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addNonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lThree)
                                        .addComponent(comboDew3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(26, Short.MAX_VALUE))
        );

        butClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        butClear.setText("Clear all");
        butClear.addActionListener(evt -> butClearActionPerformed(evt));
        butClear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butClearKeyReleased(evt);
            }
        });

        butAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        butAdd.setText("Add");
        butAdd.addActionListener(evt -> butAddActionPerformed(evt));
        butAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butAddKeyReleased(evt);
            }
        });

        pMessage.setBorder(javax.swing.BorderFactory.createTitledBorder("Messages"));

        taMessages.setEditable(false);
        taMessages.setToolTipText("Messages from the database appear here.");
        jScrollPane2.setViewportView(taMessages);

        javax.swing.GroupLayout pMessageLayout = new javax.swing.GroupLayout(pMessage);
        pMessage.setLayout(pMessageLayout);
        pMessageLayout.setHorizontalGroup(
                pMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pMessageLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addContainerGap())
        );
        pMessageLayout.setVerticalGroup(
                pMessageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pMessageLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2)
                                .addContainerGap())
        );

        butClearMess.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        butClearMess.setText("Clear messages");
        butClearMess.addActionListener(evt -> butClearMessActionPerformed(evt));
        butClearMess.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butClearMessKeyReleased(evt);
            }
        });

        butAddNewAuthors.setText("Add new author(s)");
        butAddNewAuthors.setToolTipText("Add new authors to the database.");
        butAddNewAuthors.addActionListener(evt -> butAddNewAuthorsActionPerformed(evt));
        butAddNewAuthors.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                butAddNewAuthorsKeyReleased(evt);
            }
        });

        comboAuthor.setEditable(true);
        comboAuthor.setToolTipText("<html>Select the author of the book.<br>\nIf the author is not in the list,<br>\nadd the author using the 'Add<br> \nnew author(s)' button.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(butAdd)
                                                .addGap(18, 18, 18)
                                                .addComponent(butClearMess)
                                                .addGap(18, 18, 18)
                                                .addComponent(butClear))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(lPublished)
                                                                                        .addComponent(lDate, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(lPlace, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(lPrice, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(lAuthor, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                                        .addComponent(lTitle, javax.swing.GroupLayout.Alignment.TRAILING))
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(tfTitle)
                                                                                        .addComponent(tfYearPublished)
                                                                                        .addComponent(tfDate)
                                                                                        .addComponent(tfPrice)
                                                                                        .addComponent(comboShop, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(comboAuthor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                .addGap(30, 30, 30)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(butAddAuthors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(butAddShop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(107, 107, 107)
                                                                                .addComponent(radFiction)
                                                                                .addGap(29, 29, 29)
                                                                                .addComponent(radNonFic)
                                                                                .addGap(37, 37, 37)
                                                                                .addComponent(radAddDum)
                                                                                .addGap(0, 0, Short.MAX_VALUE)))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(butAddNewAuthors)
                                                                .addGap(200, 200, 200))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(addFictionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(addNonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addGap(14, 14, 14)))
                                                .addComponent(pMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(radFiction)
                                                        .addComponent(radNonFic)
                                                        .addComponent(radAddDum))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lTitle)
                                                        .addComponent(tfTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lAuthor)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(butAddAuthors)
                                                                        .addComponent(butAddNewAuthors)
                                                                        .addComponent(comboAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(tfYearPublished, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(lPublished))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lPrice)
                                                        .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lPlace)
                                                        .addComponent(comboShop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(butAddShop))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(lDate)
                                                        .addComponent(tfDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(28, 28, 28)
                                                .addComponent(addFictionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(addNonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(46, 46, 46))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(pMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(butClear)
                                                        .addComponent(butClearMess)
                                                        .addComponent(butAdd))
                                                .addContainerGap())))
        );
    }

    /**
     * open GUI for adding new authors
     *
     * @param evt the button click event
     */
    private void butAddAuthorsActionPerformed(java.awt.event.ActionEvent evt) {
        final AddMultipleAuthors ama = new AddMultipleAuthors();

        ama.setVisible(true);

        ama.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                multipleAuthors = ama.getAuthors();

                comboAuthor.setSelectedItem("Multiple...");
            }
        });
    }

    /**
     * open GUI for for adding new shops
     *
     * @param evt the button click event
     */
    private void butAddShopActionPerformed(java.awt.event.ActionEvent evt) {
        ShopGUI shopGUI = new ShopGUI();

        shopGUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                comboShop.setModel(DRIVER.getComboBoxModel(ComboBoxType.SHOP));
            }
        });

        shopGUI.setVisible(true);
    }

    /**
     * open GUI for adding new genre
     *
     * @param evt the button click event
     */
    private void addGenreActionPerformed(java.awt.event.ActionEvent evt) {
        GenreGUI gg = new GenreGUI();

        gg.setVisible(true);

        //add windowListener. Listens for and runs when window is closed
        gg.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                comboGenre.setModel(DRIVER.getComboBoxModel(ComboBoxType.GENRE));
            }
        });
    }

    /**
     * open GUI for adding new type of book
     *
     * @param evt the button click event
     */
    private void addTypeActionPerformed(java.awt.event.ActionEvent evt) {
        TypeGUI typeGUI = new TypeGUI();

        typeGUI.setVisible(true);

        //add windowListener. Listens for and runs when window is closed
        typeGUI.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                comboType.setModel(DRIVER.getComboBoxModel(ComboBoxType.TYPE));
            }
        });
    }

    /**
     * open GUI for adding new series
     *
     * @param evt
     */
    private void butAddSeriesActionPerformed(java.awt.event.ActionEvent evt) {
        AddSeriesGUI gui = new AddSeriesGUI();
        gui.setVisible(true);

        gui.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                //refresh comboSeries
                comboSeries.setModel(DRIVER.getComboBoxModel(ComboBoxType.SERIES));
            }
        });
    }

    /**
     * Sets the model of the Dewey level 2 comboBox when a different topic is
     * selected in the Dewey level 1 combo box
     *
     * @param evt comboBox state change event
     */
    private void comboDew1ItemStateChanged(java.awt.event.ItemEvent evt) {
        int dewey2LowerBound = comboDew1.getSelectedIndex() * 100;

        DefaultComboBoxModel<String> model = DRIVER.getDewey2Model(dewey2LowerBound,
                (String) comboDew1.getSelectedItem());

        comboDew2.setModel(model);
    }

    /**
     * Sets the model of the Dewey level 3 comboBox when a different topic is
     * selected in the Dewey level 3 combo box
     *
     * @param evt comboBox state change event
     */
    private void comboDew2ItemStateChanged(java.awt.event.ItemEvent evt) {
        int dewey3LowerBound = (comboDew1.getSelectedIndex() * 100) + comboDew2.getSelectedIndex() * 10;

        comboDew3.setModel(DRIVER.getDewey3Model(dewey3LowerBound,
                (String) comboDew2.getSelectedItem()));
    }

    /**
     * remove text from all textfields, textAreas, and select nothing in
     * comboBoxes
     *
     * @param evt button click event
     */
    private void butClearActionPerformed(java.awt.event.ActionEvent evt) {
        tfTitle.setText(null);
        comboAuthor.setSelectedIndex(-1);
        tfPrice.setText(null);
        tfDate.setText(null);
        tfYearPublished.setText(null);
        comboSeries.setSelectedIndex(-1);
        tfNumber.setText(null);

        radAddDum.setSelected(true);

        comboShop.setSelectedIndex(0);
        comboGenre.setSelectedIndex(0);
        comboType.setSelectedIndex(0);
        comboDew1.setSelectedIndex(0);
        comboDew2.setSelectedIndex(0);
        comboDew3.setSelectedIndex(0);

        taMessages.setText("");
    }


    /**
     * Adds a new book to the database
     *
     * @param evt the button ("add") click event
     */
    private void butAddActionPerformed(java.awt.event.ActionEvent evt) {
        Book book = new Book();

        book.setTitle(tfTitle.getText());

        //authors
        if (multipleAuthors == null) {
            String authName = comboAuthor.getSelectedItem().toString();
            Author auth = new Author(authName, new Role("Author"));

            book.addAuthor(auth);
        } else {
            for (Author author : multipleAuthors) {
                book.addAuthor(author);
            }
        }

        book.setPrice(Double.parseDouble(tfPrice.getText()));

        String[] temp = tfDate.getText().split("/");
        book.setMonth(Integer.parseInt(temp[0]));
        book.setYear(Integer.parseInt(temp[1]));

        book.setPublished(Integer.parseInt(tfYearPublished.getText()));

        Shop shop = new Shop(comboShop.getSelectedItem().toString());//shop
        // ID set in this constructor call
        logger.fine("library.MainGUI.butAddActionPerformed() shop: " + shop.toString());
        book.setShop(shop);

        if (radFiction.isSelected()) {
            Fiction fictionBook = new Fiction(book);

            try {
                Genre genre = new Genre(comboGenre.getSelectedItem().toString());
                fictionBook.setGenre(genre);

                TypeOfBook type = new TypeOfBook(comboType.getSelectedItem().toString());
                fictionBook.setType(type);

                fictionBook.setNumber(Integer.parseInt(tfNumber.getText()));

                Series series = new Series(comboSeries.getSelectedItem().toString());
                fictionBook.setSeries(series);

                logger.fine("library.MainGUI.butAddActionPerformed() " +
                        "fictionbook.getShop: " + fictionBook.getShop());

                if (fictionBook.addToDatabase()) {
                    DRIVER.appendToPane(taMessages, "\"" + fictionBook.getTitle() + "\" successfully added to the database.\n", Color.green);
                } else {
                    DRIVER.appendToPane(taMessages, "\"" + fictionBook.getTitle() + "\" could not be added.\n", Color.red);
                }
            } catch (NumberFormatException nfe) {
                DRIVER.appendToPane(taMessages, "Please enter digits only in the first published "
                        + "and price fields. Also ensure that the date is in the correct format.\n", Color.orange);
                logger.log(Level.WARNING, nfe.toString(), nfe);
                nfe.printStackTrace();
            }
        } else if (radNonFic.isSelected()) {
            NonFiction nonFictionBook = new NonFiction(book);

            try {
                int dewey = comboDew1.getSelectedIndex() * 100
                        + comboDew2.getSelectedIndex() * 10
                        + comboDew3.getSelectedIndex();

                nonFictionBook.setDeweyNumber(dewey);

                if (nonFictionBook.addToDatabase()) {
                    DRIVER.appendToPane(taMessages, "\"" + nonFictionBook.getTitle() + "\"added successfully to the database.\n", Color.green);
                } else {
                    DRIVER.appendToPane(taMessages, "\"" + nonFictionBook.getTitle() + "\" could not be added to the database.\n", Color.red);
                }
            } catch (NumberFormatException nfe) {
                DRIVER.appendToPane(taMessages, "Please enter digits only in the first published "
                        + "and price fields. Also ensure that the date is in the correct format.\n", Color.orange);
                logger.log(Level.WARNING, nfe.toString(), nfe);
                nfe.printStackTrace();
            }
        } else {
            PopUpMessages.infoMessageNormal("Please select whether to the book is fiction or non-fiction.");
        }
    }

    /**
     * clear text from text area
     * @param evt the button ("clear messages") click event
     */
    private void butClearMessActionPerformed(java.awt.event.ActionEvent evt) {
        taMessages.setText("");
    }

    /**
     * open GUI for adding new authors(s)
     * @param evt open GUI for adding new authors(s)
     */
    private void butAddNewAuthorsActionPerformed(java.awt.event.ActionEvent evt) {
        AddNewAuthors add = new AddNewAuthors();
        add.setVisible(true);

        add.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt) {
                //refresh combo authors
                comboAuthor.setModel(DRIVER.getComboBoxModel(ComboBoxType.AUTHOR));
            }
        });
    }

    private void butAddAuthorsKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butAddAuthorsActionPerformed(null);
        }
    }

    private void butAddNewAuthorsKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butAddNewAuthorsActionPerformed(null);
        }
    }

    private void butAddShopKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butAddSeriesActionPerformed(null);
        }
    }

    private void addGenreKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addGenreActionPerformed(null);
        }
    }

    private void addTypeKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addTypeActionPerformed(null);
        }
    }

    private void butAddKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butAddActionPerformed(null);
        }
    }

    private void butAddSeriesKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butAddSeriesActionPerformed(null);
        }
    }

    private void butClearMessKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butClearMessActionPerformed(null);
        }
    }

    private void butClearKeyReleased(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butClearActionPerformed(null);
        }
    }
}
