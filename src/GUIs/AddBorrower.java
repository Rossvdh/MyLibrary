/*
 GUI to add a new borrower to the database
 Ross van der Heyde
 26 January 2015
 */
package GUIs;

import java.awt.*;
import java.awt.event.*;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.border.*;
import library.Borrower;
import library.Driver;

/**
 * JFrame for adding a new borrower to the database.
 *
 * @author ross
 */
public class AddBorrower extends javax.swing.JFrame {

    /**
     * Creates new form AddBorrower
     */
    public AddBorrower() {
        initComponents();
        pAdd.setVisible(false);
        pUpdate.setVisible(false);
        pDelete.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - Ross
    private void initComponents() {
        pAdd = new JPanel();
        lNumber = new JLabel();
        lName = new JLabel();
        tfEmail = new JTextField();
        tfNumber = new JTextField();
        tfName = new JTextField();
        lEmail = new JLabel();
        butAdd = new JButton();
        pDelete = new JPanel();
        lBorID = new JLabel();
        tfDelID = new JTextField();
        butDelete = new JButton();
        pUpdate = new JPanel();
        lField = new JLabel();
        lNewValue = new JLabel();
        lUpdateID = new JLabel();
        tfUpdateID = new JTextField();
        tfNewValue = new JTextField();
        comboUpdate = new JComboBox<>();
        butUpdate = new JButton();
        butCancel = new JButton();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        Container contentPane = getContentPane();

        //======== pAdd ========
        {
            pAdd.setBorder(new EtchedBorder());

            // JFormDesigner evaluation mark
            pAdd.setBorder(new javax.swing.border.CompoundBorder(
                new javax.swing.border.TitledBorder(new javax.swing.border.EmptyBorder(0, 0, 0, 0),
                    "JFormDesigner Evaluation", javax.swing.border.TitledBorder.CENTER,
                    javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Dialog", java.awt.Font.BOLD, 12),
                    java.awt.Color.red), pAdd.getBorder())); pAdd.addPropertyChangeListener(new java.beans.PropertyChangeListener(){public void propertyChange(java.beans.PropertyChangeEvent e){if("border".equals(e.getPropertyName()))throw new RuntimeException();}});


            //---- lNumber ----
            lNumber.setText("Contact number:");

            //---- lName ----
            lName.setText("Full name:");

            //---- lEmail ----
            lEmail.setText("E-mail address:");

            //---- butAdd ----
            butAdd.setText("Add");
            butAdd.addActionListener(e -> butAddActionPerformed(e));
            butAdd.addKeyListener(new KeyAdapter() {
                @Override
                public void keyReleased(KeyEvent e) {
                    butAddKeyReleased(e);
                }
            });

            GroupLayout pAddLayout = new GroupLayout(pAdd);
            pAdd.setLayout(pAddLayout);
            pAddLayout.setHorizontalGroup(
                pAddLayout.createParallelGroup()
                    .addGroup(pAddLayout.createParallelGroup()
                        .addGroup(pAddLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(pAddLayout.createParallelGroup()
                                .addComponent(lNumber)
                                .addComponent(lName, GroupLayout.Alignment.TRAILING)
                                .addComponent(lEmail, GroupLayout.Alignment.TRAILING))
                            .addGap(18, 18, 18)
                            .addGroup(pAddLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfName)
                                .addComponent(tfNumber)
                                .addComponent(tfEmail, GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(GroupLayout.Alignment.TRAILING, pAddLayout.createSequentialGroup()
                        .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butAdd, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
            );
            pAddLayout.setVerticalGroup(
                pAddLayout.createParallelGroup()
                    .addGroup(pAddLayout.createParallelGroup()
                        .addGroup(pAddLayout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addGroup(pAddLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(lName)
                                .addComponent(tfName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pAddLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(lNumber)
                                .addComponent(tfNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(pAddLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                .addComponent(lEmail)
                                .addComponent(tfEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(84, Short.MAX_VALUE)))
                    .addGroup(GroupLayout.Alignment.TRAILING, pAddLayout.createSequentialGroup()
                        .addContainerGap(165, Short.MAX_VALUE)
                        .addComponent(butAdd)
                        .addGap(41, 41, 41))
            );
        }

        //======== pDelete ========
        {
            pDelete.setBorder(new EtchedBorder());

            //---- lBorID ----
            lBorID.setText("Borrower ID:");

            //---- butDelete ----
            butDelete.setText("Delete");
            butDelete.addActionListener(e -> butDeleteActionPerformed(e));
            butDelete.addKeyListener(new KeyAdapter() {
                @Override
                public void keyReleased(KeyEvent e) {
                    butDeleteKeyReleased(e);
                }
            });

            GroupLayout pDeleteLayout = new GroupLayout(pDelete);
            pDelete.setLayout(pDeleteLayout);
            pDeleteLayout.setHorizontalGroup(
                pDeleteLayout.createParallelGroup()
                    .addGroup(pDeleteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pDeleteLayout.createParallelGroup()
                            .addGroup(pDeleteLayout.createSequentialGroup()
                                .addComponent(lBorID)
                                .addGap(38, 38, 38)
                                .addComponent(tfDelID))
                            .addGroup(GroupLayout.Alignment.TRAILING, pDeleteLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(butDelete, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
            );
            pDeleteLayout.setVerticalGroup(
                pDeleteLayout.createParallelGroup()
                    .addGroup(pDeleteLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pDeleteLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lBorID)
                            .addComponent(tfDelID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(butDelete)
                        .addContainerGap())
            );
        }

        //======== pUpdate ========
        {
            pUpdate.setBorder(new EtchedBorder());

            //---- lField ----
            lField.setText("Field to update:");

            //---- lNewValue ----
            lNewValue.setText("New value:");

            //---- lUpdateID ----
            lUpdateID.setText("Borrower ID:");

            //---- comboUpdate ----
            comboUpdate.setModel(new DefaultComboBoxModel<>(new String[] {
                "Name",
                "Contact number",
                "E-mail address"
            }));

            //---- butUpdate ----
            butUpdate.setText("Update");
            butUpdate.addActionListener(e -> butUpdateActionPerformed(e));
            butUpdate.addKeyListener(new KeyAdapter() {
                @Override
                public void keyReleased(KeyEvent e) {
                    butUpdateKeyReleased(e);
                }
            });

            GroupLayout pUpdateLayout = new GroupLayout(pUpdate);
            pUpdate.setLayout(pUpdateLayout);
            pUpdateLayout.setHorizontalGroup(
                pUpdateLayout.createParallelGroup()
                    .addGroup(pUpdateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pUpdateLayout.createParallelGroup()
                            .addGroup(pUpdateLayout.createSequentialGroup()
                                .addGroup(pUpdateLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(lNewValue)
                                    .addComponent(lUpdateID)
                                    .addComponent(lField))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pUpdateLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(comboUpdate, GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                                    .addComponent(tfUpdateID)
                                    .addComponent(tfNewValue)))
                            .addGroup(GroupLayout.Alignment.TRAILING, pUpdateLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(butUpdate)))
                        .addContainerGap())
            );
            pUpdateLayout.setVerticalGroup(
                pUpdateLayout.createParallelGroup()
                    .addGroup(pUpdateLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pUpdateLayout.createParallelGroup()
                            .addComponent(lUpdateID)
                            .addComponent(tfUpdateID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pUpdateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(lField)
                            .addComponent(comboUpdate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pUpdateLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(tfNewValue, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(lNewValue))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(butUpdate)
                        .addContainerGap())
            );
        }

        //---- butCancel ----
        butCancel.setText("Cancel");
        butCancel.addActionListener(e -> butCancelActionPerformed(e));
        butCancel.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                butCancelKeyReleased(e);
            }
        });

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(contentPaneLayout.createParallelGroup()
                        .addComponent(pUpdate, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pDelete, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pAdd, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
                .addGroup(GroupLayout.Alignment.TRAILING, contentPaneLayout.createSequentialGroup()
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(butCancel)
                    .addGap(24, 24, 24))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addGroup(contentPaneLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pAdd, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(pDelete, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(pUpdate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(butCancel)
                    .addContainerGap())
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    /**
     * ActionPerformed method for add button. Gets data from GUI, creates
     * <code>Borrower</code> and adds to the database.
     *
     * @param evt the button click event.
     */
    private void butAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAddActionPerformed
        Borrower bor = new Borrower();//create new borrower

        //set borrower's details
        bor.setName(tfName.getText());
        bor.setNumber(tfNumber.getText());
        bor.setEMail(tfEmail.getText());

        //add to DB, inform of success/failure
        if (bor.addToDatabase()) {
            driver.infoMessageNormal("Borrower successfully added to the database.");
            this.dispose();
        } else {
            driver.infoMessageNormal("Borrower could not be added.");
        }
    }//GEN-LAST:event_butAddActionPerformed

    /**
     * ActionPerformed method for cancel button. Closes the window
     *
     * @param evt the button click event.
     */
    private void butCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_butCancelActionPerformed

    /**
     * ActionPerformed method for delete button. Deletes a borrower from the
     * database
     *
     * @param evt the button click event.
     */
    private void butDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butDeleteActionPerformed
        int id = Integer.parseInt(tfDelID.getText());//get borrower ID

        //create new borrower
        Borrower b = new Borrower(id, driver);

        //perform deletion and inform user of success/failure
        if (b.deleteFromDatabase()) {
            driver.infoMessageNormal("Borrower succeddfully deleted.");
            this.dispose();
        } else {
            driver.infoMessageNormal("Borrower was not deleted.");
        }
    }//GEN-LAST:event_butDeleteActionPerformed

    /**
     * ActionPerformed method for update button. Gets data from GUI, creates
     * <code>Author</code> and updates it in the database
     *
     * @param evt the button click event.
     */
    private void butUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_butUpdateActionPerformed

    private void butAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butAddKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butAddActionPerformed(null);
        }
    }//GEN-LAST:event_butAddKeyReleased

    private void butCancelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butCancelKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butCancelActionPerformed(null);
        }
    }//GEN-LAST:event_butCancelKeyReleased

    private void butDeleteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butDeleteKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butDeleteActionPerformed(null);
        }
    }//GEN-LAST:event_butDeleteKeyReleased

    private void butUpdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_butUpdateKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            butUpdateActionPerformed(null);
        }
    }//GEN-LAST:event_butUpdateKeyReleased

    /**
     * Set delete, add, or update panel visible depending on parameter
     *
     * @param p Integer indicating panel to be visible. 0- add, 1- update, 2-
     * delete
     */
    public void setVisiblePanel(int p) {
        switch (p) {
            case 0: {
                //set add panel visble
                pAdd.setVisible(true);

                //set size of AddBorrower JFrame to just bigger than size of visible panel
                this.setSize(pAdd.getWidth(), pAdd.getHeight() + 40);

                //set title of JFrame to something appropriate
                this.setTitle("Add a new borrower to the database | MyLibrary");

                break;
            }
            case 1: {
                //set update panel visible
                pUpdate.setVisible(true);

                this.setSize(pUpdate.getWidth(), pUpdate.getHeight() + 40);
                this.setTitle("Update a borrower's details | MyLibrary");

                break;
            }
            case 2: {
                //set delete panel visble 
                pDelete.setVisible(true);

                this.setSize(pDelete.getWidth(), pDelete.getHeight() + 30);
                this.setTitle("Delete a borrower from the database | MyLibrary");

                break;
            }
            default: {
                driver.errorMessageNormal("Invalid setVisiblePanel parameter. Must be 0, 1, or 2");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBorrower.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBorrower().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - Ross
    private JPanel pAdd;
    private JLabel lNumber;
    private JLabel lName;
    private JTextField tfEmail;
    private JTextField tfNumber;
    private JTextField tfName;
    private JLabel lEmail;
    private JButton butAdd;
    private JPanel pDelete;
    private JLabel lBorID;
    private JTextField tfDelID;
    private JButton butDelete;
    private JPanel pUpdate;
    private JLabel lField;
    private JLabel lNewValue;
    private JLabel lUpdateID;
    private JTextField tfUpdateID;
    private JTextField tfNewValue;
    private JComboBox<String> comboUpdate;
    private JButton butUpdate;
    private JButton butCancel;
    // End of variables declaration//GEN-END:variables
    private Driver driver = new Driver();

}
